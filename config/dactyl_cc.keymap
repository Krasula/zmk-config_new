/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/macros.h>

#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4

#define LDR LC(A)

/ {
    macros {
        lambda_macro: lambda_macro {
            label = "Lambda function";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            actions = <MAC_TAP_WAIT(20) MAC_TAP_WAIT(20) MAC_TAP_WAIT(20) MAC_TAP_WAIT(20)>;
            bindings = <&kp LBKT &kp LS(N7) &kp RBKT &kp LS(N9)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// +-------+-----+-----+-----+-----+-----+                                       +-----+-----+-----+-----+-----+-------+
// |  =    |  1  |  2  |  3  |  4  |  5  |                                       |  6  |  7  |  8  |  9  |  0  |   -   |
// +-------+-----+-----+-----+-----+-----+                                       +-----+-----+-----+-----+-----+-------+
// |  TAB  |  Q  |  W  |  E  |  R  |  T  |                                       |  Y  |  U  |  I  |  O  |  P  |   \   |
// +-------+-----+-----+-----+-----+-----+                                       +-----+-----+-----+-----+-----+-------+
// |  ESC  |  A  |  S  |  D  |  F  |  G  |                                       |  H  |  J  |  K  |  L  |  ;  |   '   |
// +-------+-----+-----+-----+-----+-----+  +------+------+     +------+------+  +-----+-----+-----+-----+-----+-------+
// | SHIFT |  Z  |  X  |  C  |  V  |  B  |  | CTRL | ALT  |     | GUI  |  LDR |  |  N  |  M  |  ,  |  .  |  /  | SHIFT |
// +-------+-----+-----+-----+-----+-+---+--+------+------+     +------+------+--+---+-+-----+-----+-----+-----+-------+
//         |  `  |  \  | LFT | RGT | |      |      | HOME |     | PGUP |      |      | | UP  | DWN |  [  |  ]  |
//         +-----+-----+-----+-----+ | BKSP | ENTER|------+     +------| SHFT | SPC  | +-----+-----+-----+-----+
//                                   |      |      | ESC  |     | PGDN |      |      |
//                                   +------+------+------+     +------+------+------+
            bindings = <
                &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4    &kp N5                                              &kp N6  &kp N7 &kp N8    &kp N9     &kp N0   &kp MINUS
                &kp TAB   &kp Q     &kp W    &kp E    &kp R     &kp T                                               &kp Y   &kp U  &kp I     &kp O      &kp P    &kp BSLH
                &kp ESC   &kp A     &kp S    &kp D    &kp F     &kp G                                               &kp H   &kp J  &kp K     &kp L      &kp SEMI &kp SQT
                &kp LSHFT &kp Z     &kp X    &kp C    &kp V     &kp B    &kp LCTRL &kp LALT    &kp LGUI  &lt 1 LDR  &kp N   &kp M  &kp COMMA &lt 2 DOT  &kp FSLH &kp RSHFT
                          &kp GRAVE &kp BSLH &kp LEFT &kp RIGHT &kp BSPC &kp RET   &kp HOME    &kp PG_UP &kp LSHIFT &kp SPC &kp UP &kp DOWN  &kp LBKT   &kp RBKT
                                                                                   &lt 1 ESC   &kp PG_DN
            >;
        };

        raise_layer {
// +-------+-----+-----+-----+-----+-----+                                       +-----+-----+-----+-----+-----+-------+
// |       |  F1 |  F2 |  F3 |  F4 |  F5 |                                       |  F6 |  F7 |  F8 |  F9 | F10 |  F11  |
// +-------+-----+-----+-----+-----+-----+                                       +-----+-----+-----+-----+-----+-------+
// | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |                                       |     |     |     |     |     |  F12  |
// +-------+-----+-----+-----+-----+-----+                                       +-----+-----+-----+-----+-----+-------+
// | CAPS  |     |     |     |     |     |                                       | LFT | DWN |  UP | RGT |     |       |
// +-------+-----+-----+-----+-----+-----+  +------+------+     +------+------+  +-----+-----+-----+-----+-----+-------+
// | OUTTG |     |     |     |     |     |  | CTRL | ALT  |     | GUI  | XXXX |  |     |     |     |     |     |       |
// +-------+-----+-----+-----+-----+-+---+--+------+------+     +------+------+--+---+-+-----+-----+-----+-----+-------+
//         | RST |     |     |     | |      |      | HOME |     | PGUP |      |      | |     |     |     | RST |
//         +-----+-----+-----+-----+ | DEL  | ENTER|------+     +------| SHFT | SPC  | +-----+-----+-----+-----+
//                                   |      |      | ESC  |     | PGDN |      |      |
//                                   +------+------+------+     +------+------+------+
            bindings = <
                &none         &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                  &kp F6   &kp F7   &kp F8 &kp F9    &kp F10     &kp F11
                &bt BT_CLR    &bt BT0 &bt BT1 &bt BT2 &bt BT3 &bt BT4                                 &none    &none    &none  &none     &none       &kp F12
                &kp CLCK      &none   &none   &none   &none   &none                                   &kp LEFT &kp DOWN &kp UP &kp RIGHT &none       &none
                &out OUT_TOG  &none   &none   &none   &none   &none   &trans &trans     &trans &trans &none    &none    &none  &none     &none       &none
                        &bootloader   &none   &none   &none   &kp DEL &trans &trans     &trans &trans &trans   &none    &none  &none     &bootloader
                                                                             &trans     &trans
            >;
        };

        bracket_layer {
		    bindings = <
			    &trans &trans &trans &trans &trans &trans                                 &trans        &trans        &trans       &trans &trans &trans
			    &trans &trans &trans &trans &trans &trans                                 &trans        &kp LS(COMMA) &kp LS(DOT)  &trans &trans &trans
			    &trans &trans &trans &trans &trans &trans                                 &lambda_macro &kp LS(LBKT)  &kp LS(RBKT) &trans &trans &trans
			    &trans &trans &trans &trans &trans &trans &trans &trans     &trans &trans &trans        &kp LBKT      &kp RBKT     &trans &trans &trans
			           &trans &trans &trans &trans &trans &trans &trans     &trans &trans &trans        &kp LS(N9)    &kp LS(N0)   &trans &trans
			                                                     &trans     &trans
			>;
	    };

    };
};
